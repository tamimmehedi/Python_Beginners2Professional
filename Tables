One of the things loops are good for is generating tables. Before computers were readily available, people had to
calculate logarithms, sines and cosines, and other mathematical functions by hand. To make that easier, mathematics
books contained long tables listing the values of these functions. Creating the tables was slow and boring, and they
tended to be full of errors.

When computers appeared on the scene, one of the initial reactions was, “This is great! We can use the computers to
generate the tables, so there will be no errors.” That turned out to be true (mostly) but shortsighted. Soon thereafter,
computers and calculators were so pervasive that the tables became obsolete.

Well, almost. For some operations, computers use tables of values to get an approximate answer and then perform
computations to improve the approximation. In some cases, there have been errors in the underlying tables, most
famously in the table the Intel Pentium processor chip used to perform floating-point division.

Although a log table is not as useful as it once was, it still makes a good example of iteration. The following program
outputs a sequence of values in the left column and 2 raised to the power of that value in the right column:

    for x in range(13):
    # Generate numbers 0 to 12
    print(x, "\t", 2**x)
