We’ve already seen lists of names and lists of numbers in Python. We’re going to peek ahead in the textbook a little,
and show a more advanced way of representing our data. Making a pair of things in Python is as simple as putting
them into parentheses, like this:

  year_born = ("Paris Hilton", 1981)
  
We can put many pairs into a list of pairs:
  
  celebs = [("Brad Pitt", 1963), ("Jack Nicholson", 1937), ("Justin Bieber", 1994)]

Here is a quick sample of things we can do with structured data like this. First, print all the celebs:
    
    print(celebs)
    print(len(celebs))
    
    [("Brad Pitt", 1963), ("Jack Nicholson", 1937), ("Justin Bieber", 1994)]
    3
    
Notice that the celebs list has just 3 elements, each of them pairs.

Now we print the names of those celebrities born before 1980:

    for name, year in celebs:
      if year < 1980:
        print(name)

    Brad Pitt
    Jack Nicholson
    
This demonstrates something we have not seen yet in the for loop: instead of using a single loop control variable,
we’ve used a pair of variable names, (name, year), instead. The loop is executed three times — once for each
pair in the list, and on each iteration both the variables are assigned values from the pair of data that is being 
handled.
