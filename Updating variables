When an assignment statement is executed, the right-hand side expression (i.e. the expression that comes after the
assignment token) is evaluated first. This produces a value. Then the assignment is made, so that the variable on the
left-hand side now refers to the new value.

One of the most common forms of assignment is an update, where the new value of the variable depends on its old
value. Deduct 40 cents from my airtime balance, or add one run to the scoreboard.

  n = 5
  n = 3 * n + 1

Line 2 means get the current value of n, multiply it by three and add one, and assign the answer to n, thus making n
refer to the value. So after executing the two lines above, n will point/refer to the integer 16.
If you try to get the value of a variable that has never been assigned to, youâ€™ll get an error:

  >>> w = x + 1
  Traceback (most recent call last):
  File "<interactive input>", line 1, in
  NameError: name 'x' is not defined
 
 
