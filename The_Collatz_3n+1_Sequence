Let’s look at a simple sequence that has fascinated and foxed mathematicians for many years. They still cannot answer
even quite simple questions about this.

The “computational rule” for creating the sequence is to start from some given n, and to generate the next term of
the sequence from n, either by halving n, (whenever n is even), or else by multiplying it by three and adding 1. The
sequence terminates when n reaches 1.

This Python snippet captures that algorithm:

  n = 1027371
  while n != 1:
    print(n, end=", ")
    if n % 2 == 0:  
      n = n // 2
  else:
      n = n * 3 + 1
  print(n, end=".\n")

Notice first that the print function on line 4 has an extra argument end=", ". This tells the print function to
follow the printed string with whatever the programmer chooses (in this case, a comma followed by a space), instead
of ending the line. So each time something is printed in the loop, it is printed on the same output line, with the numbers
separated by commas. The call to print(n, end=".\n") at line 9 after the loop terminates will then print the
final value of n followed by a period and a newline character. (You’ll cover the \n (newline character) later).
